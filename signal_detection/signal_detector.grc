options:
  parameters:
    author: B. Kerler / seraj
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: '2022'
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: signal_detector
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Signal detector
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bw
  id: variable
  parameters:
    comment: ''
    value: out[1]
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 468.0]
    rotation: 0
    state: true
- name: fch
  id: variable
  parameters:
    comment: ''
    value: out[0]
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 468.0]
    rotation: 0
    state: true
- name: fft_length
  id: variable
  parameters:
    comment: ''
    value: '2048'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [816, 20.0]
    rotation: 0
    state: true
- name: found
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: ''
    label: ''
    type: real
    value: fch
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 516.0]
    rotation: 0
    state: true
- name: founded_channel
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: ''
    label: ''
    type: real
    value: int(((float(fch)-freqmin)/(samp_rate/1e6))*fft_length)//1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 388.0]
    rotation: 0
    state: true
- name: freq
  id: variable_qtgui_entry
  parameters:
    comment: ''
    gui_hint: 3,0,1,1
    label: Frequency
    type: real
    value: 433.5e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 20.0]
    rotation: 0
    state: enabled
- name: freqmin
  id: variable
  parameters:
    comment: ''
    value: (freq-(samp_rate/2))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 468.0]
    rotation: 0
    state: enabled
- name: fun_prob_1
  id: variable_function_probe
  parameters:
    block_id: prob_sig_vec
    comment: ''
    function_args: ''
    function_name: level
    poll_rate: '1'
    value: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 396.0]
    rotation: 0
    state: true
- name: gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,0,1,1
    label: Gain
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    outputmsgname: value
    rangeType: int
    showports: 'False'
    start: '0'
    step: '1'
    stop: '49'
    value: '10'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1184, 20.0]
    rotation: 0
    state: true
- name: out
  id: variable
  parameters:
    comment: ''
    value: epy_module_0.detect(fun_prob_1,samp_rate,thr,freq)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [304, 428.0]
    rotation: 0
    state: true
- name: pos
  id: variable
  parameters:
    comment: ''
    value: int(((float(fch)-freqmin)/(samp_rate/1e6))*fft_length)//1e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [784, 468.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 2.4e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: thr
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: 0,1,1,1
    label: threshold
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    outputmsgname: value
    rangeType: int
    showports: 'False'
    start: '-100'
    step: '1'
    stop: '0'
    value: '-70'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1184, 148.0]
    rotation: 0
    state: enabled
- name: vec_length
  id: variable
  parameters:
    comment: ''
    value: '2048'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 20.0]
    rotation: 0
    state: true
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: thr
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [68.0, 600]
    rotation: 90
    state: true
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: vec_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [992, 132.0]
    rotation: 0
    state: true
- name: blocks_integrate_xx_0
  id: blocks_integrate_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '100'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: vec_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [936, 212.0]
    rotation: 180
    state: true
- name: blocks_keep_one_in_n_0
  id: blocks_keep_one_in_n
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    n: int(round(samp_rate/fft_length/1000))
    type: complex
    vlen: vec_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 92.0]
    rotation: 0
    state: true
- name: blocks_nlog10_ff_0
  id: blocks_nlog10_ff
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '-100'
    maxoutbuf: '0'
    minoutbuf: '0'
    n: '10'
    vlen: vec_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 196.0]
    rotation: 180
    state: true
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: vec_length
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 352.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_1
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: vec_length
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 104.0]
    rotation: 0
    state: true
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [60.0, 368]
    rotation: 90
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base classes\
      \ are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python Block\
      \ example - a simple multiply const\"\"\"\n\n    def __init__(self, pos_init=2,pos_end=3,veclen=2048):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Vector Position Indicator',   # will show up in\
      \ GRC\n            in_sig=[],\n            out_sig=[(np.float32,veclen)]\n \
      \       )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.pos_init\
      \ = pos_init\n        self.pos_end = pos_end\n        self.veclen = veclen\n\
      \n    def work(self, input_items, output_items):\n        try:\n           \
      \ output_items[0][0][:] = np.zeros(self.veclen,dtype=np.float32)-1000\n    \
      \        output_items[0][0][int(self.pos_init):int(self.pos_end)] = np.zeros(int(self.pos_end-self.pos_init),dtype=np.float32)+1000\n\
      \        except:\n            pass\n        for i in range(1,len(output_items[0])):\n\
      \            output_items[0][i][:] = output_items[0][0][:]\n        return len(output_items[0])\n\
      \n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    pos_end: pos+bw//2
    pos_init: pos-bw//2
    veclen: vec_length
  states:
    _io_cache: ('Vector Position Indicator', 'blk', [('pos_init', '2'), ('pos_end',
      '3'), ('veclen', '2048')], [], [('0', 'float', 2048)], 'Embedded Python Block
      example - a simple multiply const', ['pos_end', 'pos_init', 'veclen'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [508.0, 368]
    rotation: 90
    state: enabled
- name: epy_module_0
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "# this module will be imported in the into your flowgraph\nimport\
      \ numpy as np\nfrom gnuradio.qtgui import GrRangeWidget\n\ndef avg_freq_pwr(data):\n\
      \tweighted_power = 0\n\tsum_power = 0\n\tfor index, samples in enumerate(data):\n\
      \t\tweighted_power += index * float(samples)\n\t\tsum_power += float(samples)\n\
      \tif len(data) <=0: \n\t\treturn 0,0\n\telse:\n\t\treturn weighted_power/float(sum_power)\n\
      \ndef estimate(spectrum,thr):\n\tspectrum = np.append(spectrum,np.zeros(1))\n\
      \tlength = len(spectrum)\n\tchannels = []\n\tlnbins = []\n\tbins = []\n\tindex\
      \ = 0\n\twhile index < length:\n\t\tif spectrum[index] > thr:\n\t\t\tbins.append(spectrum[index])\n\
      \t\t\tindex += 1\n\t\telif len(bins) > 3:\n\t\t\tavg_freq = avg_freq_pwr(bins)\n\
      \t\t\tchannels.append(index-len(bins)+avg_freq)\n\t\t\tlnbins.append(len(bins))\n\
      \t\t\tindex += 1\n\t\t\tbins = []\n\t\telse:\n\t\t\tindex += 1\n\treturn channels,lnbins\n\
      \nchannels = []\nlnbin = []\nret = [0,0]\nchannel_spacing = 0.0005\n\ndef detect(data,fs,thr,freq):\n\
      \tglobal channels,lnbin,ret,channel_spacing\n\tif isinstance(thr,GrRangeWidget):\n\
      \t\t# This fixes a weird qt range bug\n  \t\tthr = int(-70)\n\ttry:\n\t\tspectrum\
      \ = list(data)\n\t\tspectrum = np.array([float(x) for x in spectrum])\n\t\t\
      channels,lnbin = np.array(estimate(spectrum,thr))\n\t\t#print(channels,lnbin)\n\
      \t\tif len(channels) > 0:\n\t\t\tresolution = fs/len(spectrum)\n\t\t\tchannels\
      \ = (channels-len(spectrum)/2)*resolution\n\t\t\tchannels = np.round(channels/channel_spacing)*channel_spacing\n\
      \t\t\tprint(channels,lnbin)\n\t\t\ttmpf = []\n\t\t\tfor ch in channels:\n\t\t\
      \t\ttuned_channels = np.round((ch+freq)*1e6,3)\n\t\t\t\ttmpf.append(tuned_channels)\n\
      \t\t\tchannels = tmpf\n\t\t\tret = [channels[0]/1e6,lnbin[0]]\n\t\telse:\n\t\
      \t\tret = [0,0]\n\texcept Exception as err:\n\t\tprint(str(err))\n\t\tpass\n\
      \tprint(ret)\n\treturn ret\n"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 500.0]
    rotation: 0
    state: true
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_length
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '10'
    shift: 'True'
    type: complex
    window: window.blackmanharris(fft_length)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [728, 84.0]
    rotation: 0
    state: true
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: '""'
    bb_gain0: gain
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: gain
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: gain
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 116.0]
    rotation: 0
    state: true
- name: prob_sig_vec
  id: blocks_probe_signal_vx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    type: float
    vlen: vec_length
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 292.0]
    rotation: 0
    state: true
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: 0,0,1,1
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 12.0]
    rotation: 0
    state: disabled
- name: qtgui_vector_sink_f_0
  id: qtgui_vector_sink_f
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    grid: 'True'
    gui_hint: 1,0,1,2
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '3'
    ref_level: '0'
    showports: 'False'
    update_time: '0.10'
    vlen: vec_length
    width1: '2'
    width10: '1'
    width2: '2'
    width3: '2'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    x_axis_label: '"Freq in Mhz"'
    x_start: freq*1e6-(samp_rate/2)
    x_step: samp_rate/fft_length
    x_units: '""'
    y_axis_label: '"PSD"'
    y_units: '""'
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 196.0]
    rotation: 180
    state: true

connections:
- [analog_const_source_x_0, '0', blocks_throttle_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_integrate_xx_0, '0']
- [blocks_integrate_xx_0, '0', blocks_nlog10_ff_0, '0']
- [blocks_keep_one_in_n_0, '0', fft_vxx_0, '0']
- [blocks_nlog10_ff_0, '0', prob_sig_vec, '0']
- [blocks_nlog10_ff_0, '0', qtgui_vector_sink_f_0, '0']
- [blocks_stream_to_vector_0, '0', qtgui_vector_sink_f_0, '1']
- [blocks_stream_to_vector_1, '0', blocks_keep_one_in_n_0, '0']
- [blocks_throttle_0, '0', blocks_stream_to_vector_0, '0']
- [epy_block_0, '0', qtgui_vector_sink_f_0, '2']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [osmosdr_source_0, '0', blocks_stream_to_vector_1, '0']
- [osmosdr_source_0, '0', qtgui_freq_sink_x_0, '0']

metadata:
  file_format: 1
  grc_version: v3.11.0.0git-215-g9a698313
